<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.adzc.elevenapi.mapper.InvitationMapper">
    <resultMap id="BaseResultMap" type="org.adzc.elevenapi.domain.Invitation">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="location" jdbcType="VARCHAR" property="location"/>
        <result column="image_url" jdbcType="VARCHAR" property="imageUrl"/>
        <result column="audit_status" jdbcType="INTEGER" property="auditStatus"/>
        <result column="audit_reason" jdbcType="VARCHAR" property="auditReason"/>
        <result column="created_at" jdbcType="TIMESTAMP" property="createdAt"/>
        <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt"/>
        <result column="content" jdbcType="VARCHAR" property="content"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, user_id, title, location,audit_status,audit_reason, image_url, content,created_at, updated_at
    </sql>
    <select id="selectByPrimaryKey"  resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from invitation
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" >
        delete
        from invitation
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="org.adzc.elevenapi.domain.Invitation"
            useGeneratedKeys="true">
        insert into invitation (user_id, title, location,audit_status,audit_reason,
                                image_url, created_at, updated_at,
                                content)
        values (#{userId,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{location,jdbcType=VARCHAR},#{auditStatus,jdbcType=VARCHAR},#{auditReason,jdbcType=VARCHAR},
                #{imageUrl,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP},
                #{content,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="org.adzc.elevenapi.domain.Invitation"
            useGeneratedKeys="true">
        insert into invitation
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="location != null">
                location,
            </if>
            <if test="imageUrl != null">
                image_url,
            </if>
            <if test="auditStatus != null">
                audit_status,
            </if>
            <if test="auditReason != null">
                audit_reason,
            </if>
            <if test="createdAt != null">
                created_at,
            </if>
            <if test="updatedAt != null">
                updated_at,
            </if>
            <if test="content != null">
                content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="location != null">
                #{location,jdbcType=VARCHAR},
            </if>
            <if test="imageUrl != null">
                #{imageUrl,jdbcType=VARCHAR},
            </if>
            <if test="auditStatus != null">
                #{auditStatus,jdbcType=VARCHAR},
            </if>
            <if test="auditReason != null">
                #{auditReason,jdbcType=VARCHAR},
            </if>
            <if test="createdAt != null">
                #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedAt != null">
                #{updatedAt,jdbcType=TIMESTAMP},
            </if>
            <if test="content != null">
                #{content,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="org.adzc.elevenapi.domain.Invitation">
        update invitation
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="location != null">
                location = #{location,jdbcType=VARCHAR},
            </if>
            <if test="imageUrl != null">
                image_url = #{imageUrl,jdbcType=VARCHAR},
            </if>
            <if test="auditStatus != null">
                audit_status = #{auditStatus,jdbcType=VARCHAR},
            </if>
            <if test="auditReason != null">
                audit_reason = #{auditReason,jdbcType=VARCHAR},
            </if>
            <if test="createdAt != null">
                created_at = #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedAt != null">
                updated_at = #{updatedAt,jdbcType=TIMESTAMP},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="org.adzc.elevenapi.domain.Invitation">
        update invitation
        set user_id      = #{userId,jdbcType=INTEGER},
            title        = #{title,jdbcType=VARCHAR},
            location     = #{location,jdbcType=VARCHAR},
            image_url    = #{imageUrl,jdbcType=VARCHAR},
            audit_status = #{auditStatus,jdbcType=VARCHAR},
            audit_reason = #{auditReason,jdbcType=VARCHAR},
            content      = #{content,jdbcType=VARCHAR},
            created_at   = #{createdAt,jdbcType=TIMESTAMP},
            updated_at   = #{updatedAt,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>