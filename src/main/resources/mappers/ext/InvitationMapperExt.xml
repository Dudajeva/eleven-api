<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.adzc.elevenapi.mapper.InvitationMapper">

    <resultMap id="InvitationCardMap" type="org.adzc.elevenapi.invitation.dto.InvitationCardDTO">
        <id     property="id"          column="id"/>
        <result property="publisherId" column="publisher_id"/>
        <result property="title"       column="title"/>
        <result property="content"     column="content"/>
        <result property="location"    column="location"/>
        <result property="imageUrl"    column="image_url"/>
        <result property="createdAt"   column="created_at"/>

        <result property="nickname"    column="nickname"/>
        <result property="avatarUrl"   column="avatar_url"/>
        <result property="age"         column="age"/>
        <result property="province"    column="province"/>
        <result property="city"        column="city"/>

        <result property="tier"        column="tier"/>
        <result property="signedUp"    column="signed_up"/>
        <result property="signUpCount" column="sign_up_count"/>
    </resultMap>

    <select id="countAll" resultType="long">
        SELECT COUNT(1) FROM invitation
    </select>

    <select id="selectInvitationCards" resultMap="InvitationCardMap">
        SELECT
        i.id,
        i.user_id                AS publisher_id,
        i.title, i.content, i.location, i.image_url, i.created_at,
        up.nickname, up.avatar_url, up.age, up.province, up.city,
        um1.tier,

        CASE WHEN #{currentUid} IS NULL THEN FALSE
        ELSE EXISTS (
        SELECT 1 FROM invitation_sign_up isu
        WHERE isu.invitation_id = i.id
        AND isu.user_id = #{currentUid}
        )
        END AS signed_up,

        COALESCE(suc.sign_up_count, 0) AS sign_up_count

        FROM invitation i
        /* 只保留“有效会员”的发布者：INNER JOIN 生效的会员集合 */
        INNER JOIN (
        SELECT user_id, tier
        FROM (
        SELECT
        um.user_id, um.tier, um.expire_time,
        ROW_NUMBER() OVER (PARTITION BY um.user_id ORDER BY um.expire_time DESC) AS rn
        FROM user_membership um
        WHERE um.status = 'active'
        AND (um.expire_time IS NULL OR um.expire_time > NOW())
        ) z
        WHERE z.rn = 1
        ) um1 ON um1.user_id = i.user_id

        LEFT JOIN user_profile up ON up.user_id = i.user_id

        LEFT JOIN (
        SELECT invitation_id, COUNT(*) AS sign_up_count
        FROM invitation_sign_up
        GROUP BY invitation_id
        ) suc ON suc.invitation_id = i.id

        WHERE audit_status = 1
        <if test="currentUid != null">
            AND i.user_id &lt;&gt; #{currentUid}
        </if>
        ORDER BY i.created_at DESC
        LIMIT #{size} OFFSET #{offset}
    </select>

    <select id="selectByUserId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from invitation
        WHERE user_id = #{currentUid}
        ORDER BY created_at DESC
    </select>
</mapper>