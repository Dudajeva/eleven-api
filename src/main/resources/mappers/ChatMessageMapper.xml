<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.adzc.elevenapi.mapper.ChatMessageMapper">
  <resultMap id="BaseResultMap" type="org.adzc.elevenapi.domain.ChatMessage">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="conversation_id" jdbcType="BIGINT" property="conversationId" />
    <result column="sender_id" jdbcType="BIGINT" property="senderId" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="image_url" jdbcType="VARCHAR" property="imageUrl" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="recall_at" jdbcType="TIMESTAMP" property="recallAt" />
    <result column="deleted_at" jdbcType="TIMESTAMP" property="deletedAt" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from chat_message
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="org.adzc.elevenapi.domain.ChatMessage" useGeneratedKeys="true">
    insert into chat_message (conversation_id, sender_id, "type", 
      content, image_url, created_at, 
      recall_at, deleted_at)
    values (#{conversationId,jdbcType=BIGINT}, #{senderId,jdbcType=BIGINT}, #{type,jdbcType=TINYINT}, 
      #{content,jdbcType=VARCHAR}, #{imageUrl,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, 
      #{recallAt,jdbcType=TIMESTAMP}, #{deletedAt,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="org.adzc.elevenapi.domain.ChatMessage">
    update chat_message
    set conversation_id = #{conversationId,jdbcType=BIGINT},
      sender_id = #{senderId,jdbcType=BIGINT},
      "type" = #{type,jdbcType=TINYINT},
      content = #{content,jdbcType=VARCHAR},
      image_url = #{imageUrl,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      recall_at = #{recallAt,jdbcType=TIMESTAMP},
      deleted_at = #{deletedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, conversation_id, sender_id, "type", content, image_url, created_at, recall_at, 
    deleted_at
    from chat_message
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, conversation_id, sender_id, "type", content, image_url, created_at, recall_at, 
    deleted_at
    from chat_message
  </select>
</mapper>